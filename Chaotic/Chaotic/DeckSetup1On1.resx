<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>